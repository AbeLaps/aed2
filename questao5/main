/*Nomes:
Abel Andrade Prazeres dos Santos
Bruna de Souza Brasil
Gabriel Greg√≥rio dos Santos Vitor
Gabriela Silva Malveira

*/

#include "lista.h"
#include "lista.c"
#include "vetor.h"
#include "vetor.c"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(){
    
    tipoLista l;
    tipoVetor v;
    int k, n;
    float tempo_tot;
    FILE *arquivo1 = fopen("/home/gabriela.malveira/aed2/aed2/basicos/tempos_Q5.txt", "w");
    // if (arquivo1 == NULL) {
    //     perror("Erro ao abrir arquivo!\n");
    //     return 1;
    // }

    //questao 1
    fprintf(arquivo1,"busca seq");
    for(int i = 1e6; i < 1000001; i += 1e5){
        criaVetor(&v,i);
        preencheVetor(&v);
        k = rand();
        clock_t tempoini = clock();
        buscaSeqVetor(v,k);
        clock_t tempof = clock();
        tempo_tot = (float)(tempof - tempoini) / CLOCKS_PER_SEC;
        fprintf(arquivo1, "%f\n", tempo_tot);
        destroiVetor(&v);
    }
    
    int cont = 1;
    fprintf(arquivo1, "\nparte 2:\n");
    for(int i = 1e4; i < 100001; i += 1e4){
        
        criaVetor(&v,i);
        preencheVetor(&v);
        n = rand() %i;
        k = v.vet[n];
        preencheListaComVetor(&l, &v);
        clock_t tempoini = clock();
        buscaSeqLista(&l,k);
        clock_t tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "%d;%f\n", cont, tempo_tot);
        cont++;
    }

    destroiVetor(&v);
    tipoVetor copia;
    fprintf(arquivo1, "parte 2 questao 5\n");
    for(int i = 1e4; i < 1e5; i += 1e4){
        
        criaVetor(&copia,i); //cria vetor copia
        criaVetor(&v,i); //cria vetor v

        copiaVetor(&copia, &v);
        clock_t tempoini = clock();
        bubbleSort(&copia);
        clock_t tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "bubble sort: %.8f\n", tempo_tot);

        copiaVetor(&copia, &v);
        tempoini = clock();
        insertionSort(&copia);
        tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "insertion sort: %.8f\n", tempo_tot);
    
        copiaVetor(&copia, &v);
        tempoini = clock();
        selectionSort(&copia);
        tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "selection sort: %.8f\n", tempo_tot);
        
        copiaVetor(&copia, &v);
        tempoini = clock();
        quickSort(&copia);
        tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "quick sort: %.8f\n", tempo_tot);
        
        copiaVetor(&copia, &v);
        tempoini = clock();
        mergeSort(&copia);
        tempof = clock();
        tempo_tot = ((float)(tempof - tempoini) / CLOCKS_PER_SEC);
        fprintf(arquivo1, "merge sort: %.8f\n", tempo_tot);


        destroiVetor(&copia); //destroi vetor copia
        destroiVetor(&v); //destroi vetor v
    }
    fclose(arquivo1);
    printf("Tempos salvos em tempos_Q5\n");

    return 1;
}

